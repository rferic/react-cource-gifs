{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","value","setValue","handleAdd","categories","className","type","onChange","e","target","onKeyPress","key","onClick","GifGridItem","gif","src","img","alt","title","getGifs","category","a","fetch","encodeURI","response","ok","json","data","map","id","images","downsized_medium","url","Error","useFetchGifs","gifs","loading","state","setState","useEffect","then","catch","GifGrid","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"6LAwCeA,EArCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACbC,mBAAS,IADI,mBACjCC,EADiC,KAC1BC,EAD0B,KAanCC,EAAY,WACXF,IACHF,GAAc,SAAAK,GAAU,OAAKH,GAAL,mBAAeG,OACvCF,EAAS,MAIb,OACE,yBAAKG,UAAU,UACb,2BACEC,KAAK,OACLL,MAAOA,EACPM,SAtBiB,SAACC,GACtBN,EAASM,EAAEC,OAAOR,QAsBdS,WAnBiB,SAACF,GACP,UAAVA,EAAEG,KACLR,OAmBA,4BAAQS,QAAST,GAAjB,SCZSU,EAhBK,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACtB,OACC,yBAAKT,UAAU,mDACd,yBAAKU,IAAKD,EAAIE,IAAKC,IAAKH,EAAII,QAC5B,4BAAKJ,EAAII,S,uBCQGC,EAfF,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,4DACC,mCADD,SAEQC,MAAM,gDAAD,OADZ,mCACY,cAA8DC,UAAUH,GAAxE,cAFb,YAETI,EAFS,QAIDC,GAJC,iCAKSD,EAASE,OALlB,uBAKNC,EALM,EAKNA,KALM,kBAMPA,EAAKC,KAAI,SAAAd,GAAQ,IACfe,EAAsBf,EAAtBe,GAAIC,EAAkBhB,EAAlBgB,OAAQZ,EAAUJ,EAAVI,MACpB,MAAO,CAAEW,KAAIb,IAAKc,EAAOC,iBAAiBC,IAAKd,aARlC,cAWR,IAAIe,MAAM,sBAXF,4CAAH,sDCsBEC,EAnBM,SAACd,GAAc,IAAD,EACNpB,mBAAS,CACpCmC,KAAM,GACNC,SAAS,IAHwB,mBAC1BC,EAD0B,KACnBC,EADmB,KAgBlC,OAVAC,qBAAU,WACTpB,EAAQC,GACNoB,MAAK,SAAAL,GACLG,EAAS,CAAEH,OAAMC,SAAS,OAE1BK,OAAM,WACNH,EAAS,CAAEH,KAAM,GAAIC,SAAS,SAE9B,CAAChB,IAEGiB,GCFOK,EAbC,SAAC,GAAkB,IAAhBtB,EAAe,EAAfA,SAAe,EACPc,EAAad,GAA/Be,EADyB,EACzBA,KAAMC,EADmB,EACnBA,QAEd,OACC,6BACC,4BAAMhB,GACJgB,GAAW,yBAAK/B,UAAU,oCAAf,cACX8B,EAAKP,KAAI,SAAAd,GAAG,OAAK,kBAAC,EAAD,CAAaH,IAAKG,EAAIe,GAAIf,IAAKA,OAClD,+BCUY6B,EAlBM,WAAO,IAAD,EACW3C,mBAAS,CAAC,iBADrB,mBAClBI,EADkB,KACNL,EADM,KAGzB,OACE,oCACE,8CACA,6BACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,6BAEIK,EAAWwB,KAAI,SAAAR,GAAQ,OAAI,kBAAC,EAAD,CAAST,IAAKY,UAAUH,GAAWA,SAAUA,U,YCRlFwB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.48845014.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({ setCategories }) => {\n  const [ value, setValue ] = useState('')\n\n  const handleOnChange = (e) => {\n    setValue(e.target.value)\n  }\n\n  const handleKeyPress = (e) => {\n    if ( e.key === 'Enter' ) {\n      handleAdd()\n    }\n  }\n\n  const handleAdd = () => {\n    if ( value ) {\n      setCategories(categories => [value, ...categories])\n      setValue('')\n    }\n  }\n\n  return (\n    <div className=\"filter\">\n      <input\n        type=\"text\"\n        value={value}\n        onChange={handleOnChange}\n        onKeyPress={handleKeyPress}\n      />\n      <button onClick={handleAdd}>Add</button>\n    </div>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst GifGridItem = ({ gif }) => {\n\treturn (\n\t\t<div className=\"gif-grid-item animate__animated animate__fadeIn\">\n\t\t\t<img src={gif.img} alt={gif.title} />\n\t\t\t<h5>{gif.title}</h5>\n\t\t</div>\n\t)\n}\n\nGifGridItem.propTypes = {\n\tgif: PropTypes.shape({\n\t\ttitle: PropTypes.string.isRequired,\n\t\timg: PropTypes.string.isRequired,\n\t}).isRequired\n}\n\nexport default GifGridItem\n","const getGifs = async category => {\n\tconst API_KEY = 'Qdf92Vsy6zbUCJ0XY8DMpGdnOeA4wV4K'\n\tconst response = await fetch(`https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${encodeURI(category)}&limit=10`)\n\n\tif ( response.ok ) {\n\t\tconst { data } = await response.json()\n\t\treturn data.map(gif => {\n\t\t\tconst { id, images, title } = gif\n\t\t\treturn { id, img: images.downsized_medium.url, title }\n\t\t})\n\t} else {\n\t\tthrow new Error('Error: Bad request')\n\t}\n}\n\nexport default getGifs\n","import { useState, useEffect } from 'react'\nimport getGifs from '../helpers/getGifs'\n\nconst useFetchGifs = (category) => {\n\tconst [ state, setState ] = useState({\n\t\tgifs: [],\n\t\tloading: true\n\t})\n\n\tuseEffect(() => {\n\t\tgetGifs(category)\n\t\t\t.then(gifs => {\n\t\t\t\tsetState({ gifs, loading: false })\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tsetState({ gifs: [], loading: false })\n\t\t\t})\n\t}, [category])\n\n\treturn state\n}\n\nexport default useFetchGifs\n","import React from 'react'\nimport GifGridItem from './GifGridItem'\nimport useFetchGifs from '../hooks/useFetchGifs'\n\nconst GifGrid = ({ category }) => {\n\tconst { gifs, loading } = useFetchGifs(category)\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>{ category }</h2>\n\t\t\t{ loading && <div className=\"animate__animated animate__flash\">Loading...</div> }\n\t\t\t{ gifs.map(gif => (<GifGridItem key={gif.id} gif={gif} />) ) }\n\t\t\t<hr />\n\t\t</div>\n\t)\n}\n\nexport default GifGrid\n","import React, { useState } from 'react'\nimport AddCategory from './components/AddCategory'\nimport GifGrid from './components/GifGrid'\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState(['Rick y Morty'])\n\n  return (\n    <>\n      <h1>Gif expert APP</h1>\n      <hr />\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      <div>\n        {\n          categories.map(category => <GifGrid key={encodeURI(category)} category={category} />)\n        }\n      </div>\n    </>\n  )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport 'animate.css'\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}